% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bin_and_categorize_variables.R
\name{bin_and_categorize_variables}
\alias{bin_and_categorize_variables}
\title{Bin and Categorize Variables into Groups}
\usage{
bin_and_categorize_variables(data, groups, filter_missing = FALSE)
}
\arguments{
\item{data}{A data frame containing demographic variables}

\item{groups}{List of group specifications. Each element should be a list with:
- 'col': Column name in the data
- 'name': Name for the new grouping variable (optional, defaults to col_group)
- 'type': One of "cutpoints" (for continuous), "categorical", or "custom"
- 'cutpoints': For continuous variables, numeric vector of cutpoints (required for "cutpoints" type)
- 'labels': Labels for the groups (optional)
- 'values': For categorical variables, named vector mapping codes to labels (required for "categorical" type)
- 'custom_fn': For custom grouping, a function that takes a vector and returns grouped values}

\item{filter_missing}{Logical. Whether to filter rows with NA in any group column (default: FALSE)}
}
\value{
A data frame with added grouping variables
}
\description{
Transforms variables into categorical groups using cutpoints for continuous variables
and value mappings for categorical variables.
}
\examples{
\dontrun{
# Define demographic groups
demo_groups <- list(
  # Age groups
  list(
    col = "age",
    name = "age_group",
    type = "cutpoints",
    cutpoints = c(65),
    labels = c("≤65", "≥66")
  ),

  # Education groups
  list(
    col = "education",
    name = "edu_group",
    type = "cutpoints",
    cutpoints = c(7, 12),
    labels = c("[0,7]", "[8,12]", "13+")
  ),

  # Language groups
  list(
    col = "language_code",
    name = "language_group",
    type = "categorical",
    values = c("1" = "English", "2" = "Spanish")
  ),

  # Gender groups
  list(
    col = "gender",
    name = "gender_group",
    type = "categorical",
    values = c("1" = "Male", "2" = "Female")
  ),

  # Ethnicity with custom function
  list(
    col = "ethnicity_code",
    name = "ethnicity_group",
    type = "custom",
    custom_fn = function(x) {
      ifelse(x == 1, "Non-Hispanic White",
             ifelse(x == 2, "Hispanic", "Other"))
    }
  )
)

# Create all demographic groups
df_grouped <- bin_and_categorize_variables(my_data, demo_groups)

# Use just a subset of groups
age_sex_groups <- demo_groups[c(1, 4)]  # Just age and gender
df_grouped2 <- bin_and_categorize_variables(my_data, age_sex_groups)
}
}
