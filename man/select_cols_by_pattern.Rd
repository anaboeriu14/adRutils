% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select_cols_by_pattern.R
\name{select_cols_by_pattern}
\alias{select_cols_by_pattern}
\title{Select columns by name pattern}
\usage{
select_cols_by_pattern(
  dataf,
  patterns,
  exclude = NULL,
  ignore_case = TRUE,
  warn_no_match = TRUE,
  invert = FALSE
)
}
\arguments{
\item{dataf}{A data frame or tibble to select columns from}

\item{patterns}{Character vector of regex patterns to match column names}

\item{exclude}{Character vector of regex patterns to exclude (optional)}

\item{ignore_case}{Logical; if TRUE (default), performs case-insensitive matching}

\item{warn_no_match}{Logical; if TRUE (default), warns instead of errors when no columns match}

\item{invert}{Logical; if TRUE, selects columns that do NOT match the patterns}
}
\value{
A data frame or tibble containing only the selected columns
}
\description{
This function selects columns from a data frame based on regex patterns matching column names.
It is a convenience wrapper around dplyr's select() and matches() functions with additional
validation and flexibility.
}
\examples{
# Create a sample data frame
test_df <- data.frame(
  id = 1:5,
  name_first = c("John", "Jane", "Bob", "Alice", "Tom"),
  name_last = c("Smith", "Doe", "Johnson", "Brown", "Wilson"),
  age = c(25, 30, 35, 40, 45),
  score_math = c(85, 90, 78, 92, 88),
  score_eng = c(76, 94, 82, 88, 79)
)

# Select columns that contain "name"
select_cols_by_pattern(test_df, "name")

# Select columns that contain "score" but exclude "math"
select_cols_by_pattern(test_df, "score", exclude = "math")

# Select all columns EXCEPT those containing "score"
select_cols_by_pattern(test_df, "score", invert = TRUE)

# Multiple patterns
select_cols_by_pattern(test_df, c("id", "age"))
}
